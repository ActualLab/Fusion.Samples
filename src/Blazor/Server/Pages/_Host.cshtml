@page "/"
@namespace Samples.Blazor.Server.Pages
@using Samples.Blazor.Client
@using Samples.Blazor.Server.Controllers
@using Samples.Blazor.Server.Services
@using Stl
@using Stl.Fusion.Authentication
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject AuthSyncService AuthSyncService
@inject ISessionResolver SessionResolver
@{
    var authSyncService = AuthSyncService;
    var principal = HttpContext.User;
    var session = SessionResolver.Session;
    var now = DateTime.UtcNow;
    var sessionInfo = new SessionInfo(session.Id) {
        CreatedAt = now,
        LastSeenAt = now,
        IPAddress = HttpContext.Connection.RemoteIpAddress.ToString() ?? "",
        UserAgent = Request.Headers["User-Agent"].ToString() ?? "",
    };
    Task.Run(() => authSyncService.SyncAsync(principal, sessionInfo, session)).Ignore();

    Layout = null;
    var isServerSideBlazor = BlazorModeController.IsServerSideBlazor(HttpContext);
    var request = HttpContext.Request;
    var mustClose = request.Path.Value == "/close";
    var flowName = request.Query.TryGetValue("flow", out var flows) ? flows.FirstOrDefault() : "";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <title>Stl.Samples.Blazor</title>
    <base href="~/" />
    <link href="css/bootstrap/bootstrap.min.css" rel="stylesheet" />
    <script src="_content/Stl.Fusion.Blazor/scripts/fusionAuth.js"></script>
    <script>window.FusionAuth.sessionId = "@session.Id";</script>
    <link href="css/app.css" rel="stylesheet" />
    <script src="js/app.js"></script>
</head>
<body>
@if (mustClose) {
    <script>
        setTimeout(function () {
            window.close();
        }, 500)
    </script>
    <div class="alert alert-primary">
        @(flowName) completed, you can close this window.
    </div>
} else if (!isServerSideBlazor) {
    <app>Loading...</app>

    <div id="blazor-error-ui">
        An unhandled error has occurred.
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    <script src="_framework/blazor.webassembly.js"></script>
} else {
    <app>
        @* <component type="typeof(App)" render-mode="ServerPrerendered"/> *@
        @(await Html.RenderComponentAsync<App>(RenderMode.ServerPrerendered, new { SessionId = session.Id }))
    </app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
}
</body>
</html>
