@page "/serverTime"
@using System.Threading
@inherits ComputedStateComponent<DateTime>
@inject ITimeService Time

@{
    var time = State.LastNonErrorValue.Format();
    var error = State.Error;
}

<h1>Server Time</h1>

<WhenUpdateError Exception="@error"/>

<StateOfStateBadge State="@State" />

<p>Server Time: <b>@time</b></p>

<Button Color="Color.Primary" @onclick="() => State.Invalidate()">State.Invalidate()</Button>
<Button Color="Color.Primary" @onclick="() => State.Recompute()">State.Recompute()</Button>

@code {
    protected override ComputedState<DateTime>.Options GetStateOptions()
        => new () { UpdateDelayer = new UpdateDelayer(Services.UIActionTracker(), 0.5) };

    protected override Task<DateTime> ComputeState(CancellationToken cancellationToken)
        => Time.GetTime(cancellationToken);
}
