@page "/game/{GameEngineId}"
@inject IGameService Games
@inject ImmutableDictionary<string, IGameEngine> GameEngines;
@inject Session Session
@inject NavigationManager Navigator
@inject CommandRunner CommandRunner

<h1>@GameEngine.Title</h1>

<MatchingComponentFor Source="@GameEngine" SourceParameterName="GameEngine" Scope="@ComponentScopes.GameRules" />

<WhenCommandError Exception="@CommandRunner.Error" />

<AuthorizeView>
    <Authorized>
        <Text Margin="Margin.Is3.FromBottom">
            <Button Color="Color.Primary" @onclick="_ => CreateAsync()">Start a new game</Button>
        </Text>
        <OwnGameList GameStage="GameStage.New"></OwnGameList>
        <OwnGameList GameStage="GameStage.Playing"></OwnGameList>
    </Authorized>
    <NotAuthorized>
        <SignInDropdown Why="to start or join the game" />
    </NotAuthorized>
</AuthorizeView>

<GameList GameEngineId="@GameEngineId" GameStage="GameStage.New"/>

@code {
    [Parameter]
    public string GameEngineId { get; set; } = "";
    [Parameter]
    public string GameId { get; set; } = "";
    private IGameEngine GameEngine => GameEngines[GameEngineId];

    protected override void OnParametersSet()
        => CommandRunner.Component = this;

    private async Task CreateAsync()
    {
        var game = await CommandRunner.CallAsync(new Game.CreateCommand(Session, GameEngine.Id));
        if (game != null)
            Navigator.NavigateTo(LinkBuilder.Game(GameEngineId, game.Id));
    }
}
