@page "/counter"
@using System.Threading
@using HelloBlazorHybrid.Abstractions
@using Stl.Fusion.Extensions
@inherits ComputedStateComponent<string>
@inject ICounterService CounterService
@inject IFusionTime Time
@inject NavigationManager Navigator

@{
    var state = State.ValueOrDefault;
    var error = State.Error;
}

<h1>Counter</h1>

<div class="alert alert-primary">
    Open this page in <a href="@Navigator.Uri" target="_blank">another window</a> to see it updates in sync.
</div>
@if (error != null) {
    <div class="alert alert-warning" role="alert">Update error: @error.Message</div>
}

<p>Count: @state</p>

<button class="btn btn-primary" @onclick="Increment">Increment</button>

@code {
     protected override async Task<string> ComputeState(CancellationToken cancellationToken)
     {
         var count = await CounterService.Get(cancellationToken);
         return $"{count}";
     }

    private async Task Increment()
    {
        await CounterService.Increment();
        await State.ApplyUserCausedUpdate(); // This just shortens the update delay; try commenting out this line
    }
}