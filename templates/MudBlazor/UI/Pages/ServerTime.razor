@page "/serverTime"
@using System.Threading
@using Templates.Blazor3.Abstractions
@inherits LiveComponentBase<DateTime>
@inject ITimeService Time

@{
    var time = State.LastValue.ToString("F") ?? "n/a";
    var error = State.Error;
}

<MudText Typo="Typo.h4" Class="pb-3">Server Time</MudText>

<StatefulComponentState Component="@this" />

@if (error != null) {
    <MudAlert Severity="Severity.Error">Update error: @error.Message</MudAlert>
}

<MudText Class="my-3">Server Time: @time</MudText>

<MudButton Color="Color.Primary" Variant="Variant.Filled" IconClass="@Icons.Material.Refresh"
           OnClick="@Refresh">Refresh</MudButton>

@code {
    protected override void OnInitialized()
    {
        StateHasChangedTriggers = StateEventKind.All;
        base.OnInitialized();
    }

    protected override void ConfigureState(LiveState<DateTime>.Options options)
        => options.WithUpdateDelayer(0.5);

    protected override Task<DateTime> ComputeStateAsync(CancellationToken cancellationToken)
        => Time.GetTimeAsync(cancellationToken);

    private void Refresh()
    {
        State.Invalidate();
        State.CancelUpdateDelay();
    }
}
